title: blc/ui/CardViewTemplate-Macros
tags: $:/tags/Macro

\define iconHasText()
  <div title="This tiddler contains text. Open in main story to view." class="blc-CardIcon-HasText">
    <$button class="buttonTWIcon buttonTWIcon-help">
      {{$:/core/images/import-button}}
    </$button>
  </div>
\end

\define iconHasText_pre()
  <$set name="iconHasText_pre-result" filter="[<currentBoardTiddler>field:displayText[no]]"
      value=<<iconHasText>>
      emptyValue="""<span id="preventUnwantedContent" style="display:none;"></span>""" >
    <<iconHasText_pre-result>>
  </$set>
\end

\define displayText()
  <$set name="display" filter="[<currentBoardTiddler>field:displaytext[no]]"
      value="""<span id="preventUnwantedContent" style="display:none;"></span>"""
      emptyValue="""<$transclude field="text" mode="block" class="" />""" >
    <<display>>
\end

\define displayImage()
  <$set name="display" filter="[<currentBoardTiddler>field:displayimages[no]]"
      value="""<span id="preventUnwantedContent" style="display:none;"></span>"""
      emptyValue="""<$transclude field="text" mode="block" class="" />""" >
    <<display>>
\end

\define macroCardViewTemplate(tagBackground)
  <$set name="popupTagsState" value=<<qualify """blc/state/$(currentTiddler)$-tagPopup""">> >
    <div class="tc-droppable-placeholder tc-droppable-placeholder-thin">
    </div>
    <$draggable tiddler=<<currentTiddler>> class="tc-tiddler-frame blc-Card ">
      <div class="blc-CardIconFloat">
        <$set name="foregroundColor" value={{!!color}} >
          <span class="tc-tiddler-title-icon" style=<<styleIconColor>>>
            <$button class=<<tv-config-toolbar-class>>><$transclude tiddler={{!!icon}} /></$button>
          </span>
        </$set>
      </div>
      <div class="blc-CardFloats blc-Card-visDownsize">
        <$button popup=<<popupTagsState>> tooltip={{$:/language/Buttons/Tag/Hint}} aria-label={{$:/language/Buttons/Tag/Caption}} class="tc-btn-invisible">
          {{$:/core/images/tag-button}}
        </$button>
        <$button message="tm-edit-tiddler" tooltip={{$:/language/Buttons/Edit/Hint}} aria-label={{$:/language/Buttons/Edit/Caption}} class="tc-btn-invisible" >
          {{$:/core/images/edit-button}}
        </$button>
      </div>
      <$reveal type="popup" state=<<popupTagsState>> position="belowleft" class="tc-popup-keep blc-popupTag-vis">
        <$transclude tiddler="$:/core/ui/EditTemplate/tags" />
      </$reveal>
      <div class="blc-CardTagPreview">
        <$list filter="[<currentTiddler>tags[]] -[<currentListTiddler>] +[sort[title]]">
          <$set name="tagColor" filter="[<currentTiddler>has[color]]" value={{!!color}} emptyValue="""$tagBackground$""" >
            <$set name="titleDisplay" filter="[<currentTiddler>get[shorttext]]" emptyValue=<<currentTiddler>> >
              <div class="blc-CardTagPreviewChild" style=<<styleTagColor>> title=<<titleDisplay>> ></div>
            </$set>
          </$set>
        </$list>
      </div>
      <div class="blc-CardColorPreview">
        <$list filter="[<currentTiddler>has:field[color]]">
          <$set name="tagColor" filter="[<currentTiddler>has[color]]" value={{!!color}} emptyValue="""$tagBackground$""" >
            <div class="blc-CardColorPreviewChild" style=<<styleTagColor>> ></div>
          </$set>
        </$list>
      </div>
      <$set name="displayHasTextIcon" filter="[<currentCardTiddler>has:value[text]] +[!is[image]]"
          value=<<iconHasText_pre>>
          emptyValue="" >
        <<displayHasTextIcon>>
      </$set>
      <div title={{!!title}} class="blc-CardText">
        <$set name="titleDisplay" filter="[<currentTiddler>has[shorttext]]" value="shorttext" emptyValue="title">
          <$transclude field=<<titleDisplay>> mode="block" class="" />
        </$set>
        <$set name="displayBody" filter="[<currentCardTiddler>is[image]]"
            value=<<displayImage>>
            emptyValue=<<displayText>> >
          <<displayBody>>
        </$set>
      </div>
    </$draggable>
  </$set>
\end

\define macroCardViewTemplate_SetBackgroundByPalette(tagBackgroundPalette)
<$macrocall $name="macroCardViewTemplate" tagBackground={{$tagBackgroundPalette$##tag-background}} />
\end

